https://www.win.tue.nl/~aeb/linux/kbd/scancodes.html
https://tldp.org/HOWTO/pdf/Keyboard-and-Console-HOWTO.pdf
https://stackoverflow.com/questions/596481/is-it-possible-to-simulate-key-press-events-programmatically
https://stackoverflow.com/questions/61858082/javascript-to-send-keystrokes-to-a-website
https://unix.stackexchange.com/questions/545274/how-does-a-keyboard-press-get-processed-in-the-linux-kernel

https://thehackerdiary.wordpress.com/2017/04/21/exploring-devinput-1/
https://www.kernel.org/doc/html/v4.14/input/event-codes.html

https://www.offsec.com/metasploit-unleashed/keylogging/


::ANTI K-LOGS::
Ghostpress: a free anti-keylogger with an extremely small performance footprint. Features Process Protection to stop any other program terminating Ghostpress.
KL-Detector: a basic keylogger detection tool. Once you detect a keylogger, it's up to you to remove it, but the tool will alert you to the keyloggers presence.

#:::::::::::::: inspect scancodes >> keycodes :::::::::::::::
#/usr/include/linux/input-event-codes
#/dev/input/event12

#inspect X11 lib
#XKeycodeToKeysym
#usr/include/X11/Xlib.h:1695
#X11/keysymdef. h

#inspect #include <X11/XKBlib.h>
#XkbKeycodeToKeysym()

#inspect : #include <X11/Xlib.h> && #include <X11/X.h>
#XOpenDisplay()
#XQueryKeymap()

#xmodmap command
#XkbKeyAction

# xkeyboard-config
#/usr/share/X11/xkb
#/usr/lib/X11/XKeysymDB

# $ xev -event keyboard 
#reports only keyboard events

#inspect dev/input/event
#inspect xmodmap
hutter-kbd

#iptables -L

To get composed input from an input method, use XmbLookupString or
XwcLookupString.



Events from the Input Layer are available via /dev/input/event* to userland processes.
You can use 'evtest' to watch those events in real-time.

X11 Uses its own input driver called 'evdev' to read from /dev/input/event* devices
Remapping of keys is observable via 'xmodmap'.

The X server then sends to the X client(app) a keyboard event
Observable via 'xev'.

From the X client event:
LibreOffice will process this event directly.
VIM will be running in an 'xterm' which will process the event.


:::::::::::::: :: INTERACTING WITH CHAR DEVICES :: ::::::::::::

$ cat /proc/bus/input/devices
$ evtest /dev/input/event4

$ udevadm monitor
$ udevadm info -a -p /block/sr0

$ lspci
$ lsusb
$ dmidecode


$ evtest /dev/input/... in two terminals, with the path to your keyboard. 
Then try again with the --grab option

:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::




