KeyPress event, serial 37, synthetic NO, window 0x2400001,
    root 0x405, subw 0x0, time 447255, (202,145), root:(324,259),
    state 0x0, keycode 38 (keysym 0x61, a), same_screen YES,
    XLookupString gives 1 bytes: (61) "a"
    XmbLookupString gives 1 bytes: (61) "a"
    XFilterEvent returns: False

KeyRelease event, serial 37, synthetic NO, window 0x2400001,
    root 0x405, subw 0x0, time 447319, (202,145), root:(324,259),
    state 0x0, keycode 38 (keysym 0x61, a), same_screen YES,
    XLookupString gives 1 bytes: (61) "a"
    XFilterEvent returns: False

Xev only works with Keysymsand Keycodes 
NOT scancodes





KeyPress event, serial 37, synthetic NO, window 0x2400001,
    root 0x405, subw 0x0, time 448614, (202,145), root:(324,259),
    state 0x0, keycode 64 (keysym 0xffe9, Alt_L), same_screen YES,
    XLookupString gives 0 bytes: 
    XmbLookupString gives 0 bytes: 
    XFilterEvent returns: False

Scancode of L/Alt = 38
Keysym of L/ALT = 0xffe9
Keycode of L/ALT = 64

#################################################


XEV.c

#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <X11/Xlocale.h>
#include <X11/Xos.h>
#include <X11/Xlib.h>
#include <X11/Xutil.h>
#include <X11/Xproto.h>

//Pulling from XEvent;
//Pulling from XAnyEvent *e = (XAnyEvent *) eventp;

Prologue(void)
{
event_name = "KeyPress" event
e->serial = serial "37"
}


do_keyPress(void)
{
KeyCode kc = 0;

printf ("    state 0x%x, keycode %u (keysym 0x%lx, %s), same_screen %s,\n",
	    e->state, e->keycode, (unsigned long) ks, ksname, e->same_screen ? Yes : No);


e->keycode = "38"
ks = 0x"61"
ksname = "a"

Inspect X11 XAnyEvent
Inspect X11 XEvent

}

####################################################################

MOUSE EVENTS
$ /dev/input/mice  	== Touchpad 
$ /dev/input/mouse0 	== Wired Mouse
$ /dev/input/mouse1 	== Wireless Mouse

#############################################################################
$ sudo evtest --grab /dev/input/event4

> Libevdev_grab()
//prevents other files from accessing events
//Cannot see the cursor's display on screen

$ sudo evemu-record /dev/input/event4
error: this device is grabbed and I cannot record events



> uobikiemukot/linux_input.c
//small event based code

#############################################################################

Objects at /dev/input should be accessed via 
https://thehackerdiary.wordpress.com/2017/04/21/exploring-devinput-1/
https://www.baeldung.com/linux/start-here



############################################################################
READER

$ sudo cat /dev/input/event4 | od -t x1 -w24
0000000 2e 16 e9 63 00 00 00 00 f3 75 0a 00 00 00 00 00 02 00 00 00 ff ff ff ff
0000030 2e 16 e9 63 00 00 00 00 f3 75 0a 00 00 00 00 00 02 00 01 00 ff ff ff ff

The first 24 bytes relate to the structure, which is used by the kernel code to store the event. 
Thus, letâ€™s split them into parts:


2e 16 e9 63 00 00 00 00 17 95 0a 00 00 00 00 00 02 00 00 00 fd ff ff ff
|          16 bytes long system time           |type |code |   value   |

The first 16 bytes are for the timestamp, then come the event type and code, each two bytes wide. 
Finally, we have an event value four bytes wide.
